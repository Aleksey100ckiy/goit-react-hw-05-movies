{"version":3,"file":"static/js/597.98e125ca.chunk.js","mappings":"uMAyCA,UArCa,WACX,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAkBR,OAfAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAAII,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAC3BF,MAAK,SAAAG,GACJR,GAAS,OACHQ,EAAOC,MACd,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAI,WAAYF,EACzB,IACAG,SAAQ,WACPF,QAAQC,IAAI,eACb,GAEJ,GAAE,CAACZ,KAGF,6BACGF,EAAMgB,KAAI,SAAAN,GACT,OACC,yBACD,2BACI,gBAAKO,IAAG,yCAAoCP,EAAKQ,cAAgBC,IAAKT,EAAKU,KAAMC,OAAO,WACtF,uBAAIX,EAAKY,iBACT,uCAAeZ,EAAKa,UAApB,SAHGb,EAAKR,KADJQ,EAAKR,GAOhB,KAIJ,C,sLC/BGsB,EAAW,gCACXC,EAAM,mCAGCC,EAAW,mCAAG,8FAEXC,MAAM,GAAD,OAAIH,EAAJ,qCAAyCC,EAAzC,2BAFM,mFAAH,qDASXG,EAAW,mCAAG,WAAOC,GAAP,iFAEZF,MAAM,GAAD,OAAIH,EAAJ,iCAAqCC,EAArC,wCAAwEI,IAFjE,mFAAH,sDAKXC,EAAY,mCAAG,WAAOC,GAAP,iFAEXJ,MAAM,GAAD,OAAIH,EAAJ,kBAAsBO,EAAtB,oBAA0CN,EAA1C,oBAFM,mFAAH,sDAKZpB,EAAY,mCAAG,WAAO0B,GAAP,0FAEXJ,MAAM,GAAD,OAAIH,EAAJ,kBAAsBO,EAAtB,4BAAkDN,EAAlD,oBAFM,gIAAH,sDAOZO,EAAe,mCAAG,WAAOD,GAAP,0FAEhBJ,MAAM,GAAD,OAAIH,EAAJ,kBAAsBO,EAAtB,4BAAkDN,EAAlD,oBAFW,wEAI7BZ,QAAQC,IAAR,MAJ6B,wDAAH,qD,sBCtC5B,SAASmB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOpC,KAAK+B,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Cast.jsx","services/API.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import {  useParams,  } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getCastMovie } from \"services/API\";\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const { id } = useParams();\n\n\n  useEffect(() => {\n    getCastMovie(id).then(response => response.json())\n      .then(filmEl => {\n        setCasts(\n          [...filmEl.cast]);\n      })\n      .catch(errorEl => {\n        console.log('error >>', errorEl);\n      })\n      .finally(() => {\n        console.log('finaly done!');\n      });\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  return (\n    <section>\n      {casts.map(cast => {\n        return (\n         <ul key={cast.id}>\n        <li key={cast.id}>\n            <img src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`} alt={cast.name} weight='200px' />\n              <b>{cast.original_name}</b>\n              <p>Character: {cast.character} </p>\n        </li>\n      </ul>)\n      })}\n      \n    </section>\n  )\n  }\n\nexport default Cast;","// import axios from \"axios\";\n// // https://api.themoviedb.org/3/movie/550?api_key=0aea76bf17d3a057de2e549752e53890\n// const KEY = '0aea76bf17d3a057de2e549752e53890'\n\n// const instance = axios.create({\n//   baseURL: 'https://api.themoviedb.org/3/',\n// });\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst KEY = \"0aea76bf17d3a057de2e549752e53890\";\n\n\nexport const getTranding = async () => {\n\n   return await fetch(`${BASE_URL}/trending/all/day?api_key=${KEY}&page=1&language=en-US`);\n}\n\nexport const getFilmById = (films, filmId) => {\n  return films.find((film) => film.id === filmId);\n};\n\nexport const searchMovie = async (serchName) => {\n  \n  return await fetch(`${BASE_URL}/search/movie?api_key=${KEY}&page=1&language=en-US&query=${serchName}`);\n}\n\nexport const getMovieById = async (movie_id) =>{\n\n   return  await fetch(`${BASE_URL}/movie/${movie_id}?api_key=${KEY}&language=en-US`);\n}\n\nexport const getCastMovie = async (movie_id) => {\n  try {\n    return await fetch(`${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`)\n  } catch (error) {  \n  }\n}\n\nexport const getReviewsMovie = async (movie_id) => {\n try {\n  return await fetch(`${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US`)\n } catch (error) {\n  console.log(error);\n }\n  \n}\n\n\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","casts","setCasts","id","useParams","useEffect","getCastMovie","then","response","json","filmEl","cast","catch","errorEl","console","log","finally","map","src","profile_path","alt","name","weight","original_name","character","BASE_URL","KEY","getTranding","fetch","searchMovie","serchName","getMovieById","movie_id","getReviewsMovie","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}