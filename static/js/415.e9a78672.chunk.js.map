{"version":3,"file":"static/js/415.e9a78672.chunk.js","mappings":"4MAEaA,EAAYC,EAAAA,GAAAA,IAAH,2GAMTC,EAAcD,EAAAA,GAAAA,IAAH,uHASXE,EAAWF,EAAAA,GAAAA,GAAH,mGAORG,EAAQH,EAAAA,GAAAA,IAAH,uE,SCrBLI,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OACE,SAACN,EAAD,UACGM,EAAMC,KAAI,SAACC,GAAD,OACT,SAACN,EAAD,WACE,UAAC,KAAD,CAAMO,GAAE,kBAAaD,EAAKE,IAA1B,WACE,SAACN,EAAD,CAAOO,IAAG,yCAAoCH,EAAKI,aAAeC,IAAI,MACtE,SAACV,EAAD,UAAYK,EAAKM,MAAQN,EAAKM,MAAQN,EAAKO,WAH7BP,EAAKE,GADd,KAUhB,C,uFCkBD,UA7BA,WACE,OAA0BM,EAAAA,EAAAA,UAAS,IAAnC,eAAOV,EAAP,KAAcW,EAAd,KAkBA,OAfAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAcC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACxBF,MAAK,SAAAG,GACJN,GAAS,OACHM,EAAOC,SACd,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAI,WAAYF,EACzB,IACAG,SAAQ,WACPF,QAAQC,IAAI,QACb,GAEJ,GAAE,KAGD,6BACE,uCACA,SAAC,IAAD,CAAUtB,MAAOA,MAKtB,C,sLCxBKwB,EAAW,gCACXC,EAAM,mCAGCZ,EAAW,mCAAG,8FAEXa,MAAM,GAAD,OAAIF,EAAJ,qCAAyCC,EAAzC,2BAFM,mFAAH,qDASXE,EAAW,mCAAG,WAAOC,GAAP,iFAEZF,MAAM,GAAD,OAAIF,EAAJ,iCAAqCC,EAArC,wCAAwEG,IAFjE,mFAAH,sDAKXC,EAAY,mCAAG,WAAOC,GAAP,iFAEXJ,MAAM,GAAD,OAAIF,EAAJ,kBAAsBM,EAAtB,oBAA0CL,EAA1C,oBAFM,mFAAH,sDAKZM,EAAY,mCAAG,WAAOD,GAAP,0FAEXJ,MAAM,GAAD,OAAIF,EAAJ,kBAAsBM,EAAtB,4BAAkDL,EAAlD,oBAFM,gIAAH,sDAOZO,EAAe,mCAAG,WAAOF,GAAP,0FAEhBJ,MAAM,GAAD,OAAIF,EAAJ,kBAAsBM,EAAtB,4BAAkDL,EAAlD,oBAFW,wEAI7BJ,QAAQC,IAAR,MAJ6B,wDAAH,qD,sBCtC5B,SAASW,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAO5B,KAAKuB,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/FilmList.styled.js","components/FilmList.jsx","pages/Home.jsx","services/API.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const FilmName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n\nexport const Image = styled.img`\nheight: 100px;\nwidth: 100px;\ndisplay:block;\n`","import { Link } from \"react-router-dom\";\nimport { Container, CardWrapper, FilmName, Image } from \"./FilmList.styled\"\n\nexport const FilmList = ({ films }) => {\n  return (\n    <Container>\n      {films.map((film) => (\n        <CardWrapper key={film.id}>\n          <Link to={`/movies/${film.id}`}>\n            <Image src={`https://image.tmdb.org/t/p/w200${film.poster_path}`} alt=\"\" />\n            <FilmName>{(film.title ? film.title : film.name)}</FilmName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container >\n  );\n};","\nimport { FilmList } from \"components/FilmList\";\nimport { getTranding } from \"services/API\";\nimport { useState, useEffect } from \"react\";\n\nfunction Home() {\n  const [films, setFilms] = useState([]);\n  \n\n  useEffect(() => {\n    getTranding().then(response => response.json())\n      .then(filmEl => {\n        setFilms((\n          [...filmEl.results]));\n      })\n      .catch(errorEl => {\n        console.log('error >>', errorEl);\n      })\n      .finally(() => {\n        console.log('done!');\n      });\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n    \n  return (\n    <main>\n      <h1>Trendings</h1>\n      <FilmList films={films}></FilmList>\n    </main>\n\n\n  );\n}\n\nexport default Home;\n\n","// import axios from \"axios\";\n// // https://api.themoviedb.org/3/movie/550?api_key=0aea76bf17d3a057de2e549752e53890\n// const KEY = '0aea76bf17d3a057de2e549752e53890'\n\n// const instance = axios.create({\n//   baseURL: 'https://api.themoviedb.org/3/',\n// });\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst KEY = \"0aea76bf17d3a057de2e549752e53890\";\n\n\nexport const getTranding = async () => {\n\n   return await fetch(`${BASE_URL}/trending/all/day?api_key=${KEY}&page=1&language=en-US`);\n}\n\nexport const getFilmById = (films, filmId) => {\n  return films.find((film) => film.id === filmId);\n};\n\nexport const searchMovie = async (serchName) => {\n  \n  return await fetch(`${BASE_URL}/search/movie?api_key=${KEY}&page=1&language=en-US&query=${serchName}`);\n}\n\nexport const getMovieById = async (movie_id) =>{\n\n   return  await fetch(`${BASE_URL}/movie/${movie_id}?api_key=${KEY}&language=en-US`);\n}\n\nexport const getCastMovie = async (movie_id) => {\n  try {\n    return await fetch(`${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`)\n  } catch (error) {  \n  }\n}\n\nexport const getReviewsMovie = async (movie_id) => {\n try {\n  return await fetch(`${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US`)\n } catch (error) {\n  console.log(error);\n }\n  \n}\n\n\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Container","styled","CardWrapper","FilmName","Image","FilmList","films","map","film","to","id","src","poster_path","alt","title","name","useState","setFilms","useEffect","getTranding","then","response","json","filmEl","results","catch","errorEl","console","log","finally","BASE_URL","KEY","fetch","searchMovie","serchName","getMovieById","movie_id","getCastMovie","getReviewsMovie","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}