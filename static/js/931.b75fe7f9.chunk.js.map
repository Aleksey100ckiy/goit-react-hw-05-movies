{"version":3,"file":"static/js/931.b75fe7f9.chunk.js","mappings":"4MAEaA,EAAYC,EAAAA,GAAAA,IAAH,2GAMTC,EAAcD,EAAAA,GAAAA,IAAH,uHASXE,EAAWF,EAAAA,GAAAA,GAAH,mGAORG,EAAQH,EAAAA,GAAAA,IAAH,uE,SCrBLI,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OACE,SAACN,EAAD,UACGM,EAAMC,KAAI,SAACC,GAAD,OACT,SAACN,EAAD,WACE,UAAC,KAAD,CAAMO,GAAE,UAAKD,EAAKE,IAAlB,WACE,SAACN,EAAD,CAAOO,IAAG,yCAAoCH,EAAKI,aAAeC,IAAI,MACtE,SAACV,EAAD,UAAYK,EAAKM,MAAQN,EAAKM,MAAQN,EAAKO,WAH7BP,EAAKE,GADd,KAUhB,C,0HCbYM,EAAUf,EAAAA,GAAAA,IAAH,sJAQPgB,EAAQhB,EAAAA,GAAAA,MAAH,+FAMLiB,GAAOjB,EAAAA,EAAAA,IAAOkB,EAAAA,IAAPlB,CAAH,+F,SCdJmB,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,UAACN,EAAD,YACE,SAACE,EAAD,KACA,SAACD,EAAD,CACEM,KAAK,OACLF,MAAOA,EACPC,SAAU,SAACE,GAAD,OAAOF,EAASE,EAAEC,OAAOJ,MAAzB,MAIjB,E,mCCwCD,EA/Ce,WAAO,IAAD,EACnB,GAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0CL,EAAAA,EAAAA,UAAS,IAAnD,eAAOM,EAAP,KAAsBC,EAAtB,KACMC,EAAW,UAAGJ,EAAaK,IAAI,eAApB,QAA+B,GAiChD,OAPFC,EAAAA,EAAAA,YAAU,WACRH,EAAiBN,EAAOU,QAAO,SAACC,GAAD,OAC5BA,EAAMxB,MAAQwB,EAAMxB,MAAQwB,EAAMvB,MAAMwB,cAAcC,SAASN,EAAYK,cAD/C,IAIhC,GAAE,CAACZ,KAGA,6BACE,oCACA,SAACP,EAAD,CAAWC,MAAOa,EAAaZ,SAjCT,SAACP,GAEzBgB,EAD4B,KAAThB,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAE9C,KA+BG,mBAAQ0B,QA7BI,YAEdC,EAAAA,EAAAA,IAAYR,GAAaS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACnCF,MAAK,SAAAG,GACJlB,GAAU,OACJkB,EAAOC,SACd,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAI,WAAYF,EACzB,IACAG,SAAQ,WACPF,QAAQC,IAAI,QACb,GACJ,EAgB6B5B,KAAK,SAAS8B,UAAU,SAAlD,wBACA,SAAChD,EAAA,EAAD,CAAUC,MAAQ0B,MAGvB,C,+HC5CD,IAAMsB,EAAW,gCACXC,EAAM,mCAGCC,EAAc,WAExB,OAAOC,MAAM,GAAD,OAAIH,EAAJ,qCAAyCC,EAAzC,0BACd,EAMYb,EAAc,SAACgB,GAE1B,OAAOD,MAAM,GAAD,OAAIH,EAAJ,iCAAqCC,EAArC,wCAAwEG,GACrF,EAEYC,EAAe,SAACC,GAE1B,OAAOH,MAAM,GAAD,OAAIH,EAAJ,kBAAsBM,EAAtB,oBAA0CL,EAA1C,mBACd,EAOYM,EAAkB,SAACD,GAE9B,OAAOH,MAAM,GAAD,OAAIH,EAAJ,kBAAsBM,EAAtB,4BAAkDL,EAAlD,mBACb,C","sources":["components/FilmList.styled.js","components/FilmList.jsx","components/SearchBox.styled.js","components/SearchBox.jsx","pages/Movies.jsx","services/API.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const FilmName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n\nexport const Image = styled.img`\nheight: 100px;\nwidth: 100px;\ndisplay:block;\n`","import { Link } from \"react-router-dom\";\nimport { Container, CardWrapper, FilmName, Image } from \"./FilmList.styled\"\n\nexport const FilmList = ({ films }) => {\n  return (\n    <Container>\n      {films.map((film) => (\n        <CardWrapper key={film.id}>\n          <Link to={`${film.id}`}>\n            <Image src={`https://image.tmdb.org/t/p/w200${film.poster_path}`} alt=\"\" />\n            <FilmName>{(film.title ? film.title : film.name)}</FilmName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container >\n  );\n};","import styled from \"styled-components\";\nimport { HiSearch } from \"react-icons/hi\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;","import { Wrapper, Icon, Input } from \"../components/SearchBox.styled\";\n\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};","import { SearchBox } from \"../components/SearchBox\";\nimport { FilmList } from \"components/FilmList\";\n// import { getMovieById } from \"services/API\"; \nimport { searchMovie } from \"services/API\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [visibleMovies, setVisibleMovies] = useState([])\n  const searchFilms = searchParams.get(\"name\") ?? \"\";\n  \n \n  const updateQueryString = (name) => {\n    const nextParams = name !== \"\" ? { name } : {};\n    setSearchParams(nextParams);\n  };\n  \n  const onClick = () => {\n    \n    searchMovie(searchFilms).then(response => response.json())\n      .then(filmEl => {\n        setMovies((\n          [...filmEl.results]));\n      })\n      .catch(errorEl => {\n        console.log('error >>', errorEl);\n      })\n      .finally(() => {\n        console.log('done!');\n      });\n  };\n  \n  \n\n \nuseEffect(() => {\n  setVisibleMovies(movies.filter((movie) =>\n    (movie.title ? movie.title : movie.name).toLowerCase().includes(searchFilms.toLowerCase()))\n  );\n  //eslint-disable-next-line react-hooks/exhaustive-deps\n}, [movies]);\n\n  return (\n    <main>\n      <h1>Movies</h1>\n      <SearchBox value={searchFilms} onChange={updateQueryString}></SearchBox>\n      <button onClick={onClick} type=\"Button\" className='Button'>Load more</button>\n      <FilmList films={ visibleMovies }></FilmList>\n    </main>\n  );\n};\n\nexport default Movies;\n\n\n\n// import { useSearchParams } from \"react-router-dom\";\n\n// import { FilmList } from \"../components/FilmList\";\n// import { SearchBox } from \"../components/\";\n// import { getFilms } from \"../API\";\n\n// const Movies = () => {\n//     const films = getFilms();\n\n//     const [searchParams, setSearchParams] = useSearchParams();\n    \n//     const FilmName = searchParams.get(\"name\") ?? \"\";\n\n\n//     const visibleFilms = films.filter((film) =>\n//     film.name.toLowerCase().includes(FilmName.toLowerCase())\n//   );\n\n//     const updateQueryString = (name) => {\n//     const nextParams = name !== \"\" ? { name } : {};\n//     setSearchParams(nextParams);\n//   };\n//     return (\n//         <main>\n//             <SearchBox value={FilmName} onChange={updateQueryString} />\n//             <FilmList films={visibleFilms} />\n//         </main>\n//     )\n// }\n\n// export default Movies;","// import axios from \"axios\";\n// // https://api.themoviedb.org/3/movie/550?api_key=0aea76bf17d3a057de2e549752e53890\n// const KEY = '0aea76bf17d3a057de2e549752e53890'\n\n// const instance = axios.create({\n//   baseURL: 'https://api.themoviedb.org/3/',\n// });\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst KEY = \"0aea76bf17d3a057de2e549752e53890\";\n\n\nexport const getTranding = () => {\n\n   return fetch(`${BASE_URL}/trending/all/day?api_key=${KEY}&page=1&language=en-US`);\n}\n\nexport const getFilmById = (films, filmId) => {\n  return films.find((film) => film.id === filmId);\n};\n\nexport const searchMovie = (serchName) => {\n  \n  return fetch(`${BASE_URL}/search/movie?api_key=${KEY}&page=1&language=en-US&query=${serchName}`);\n}\n\nexport const getMovieById = (movie_id) => {\n\n   return fetch(`${BASE_URL}/movie/${movie_id}?api_key=${KEY}&language=en-US`);\n}\n\nexport const getCastMovie = (movie_id) => {\n  \n  return fetch(`${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`)\n}\n\nexport const getReviewsMovie = (movie_id) => {\n \n  return fetch(`${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US`)\n}\n\n\n\n"],"names":["Container","styled","CardWrapper","FilmName","Image","FilmList","films","map","film","to","id","src","poster_path","alt","title","name","Wrapper","Input","Icon","HiSearch","SearchBox","value","onChange","type","e","target","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","visibleMovies","setVisibleMovies","searchFilms","get","useEffect","filter","movie","toLowerCase","includes","onClick","searchMovie","then","response","json","filmEl","results","catch","errorEl","console","log","finally","className","BASE_URL","KEY","getTranding","fetch","serchName","getMovieById","movie_id","getReviewsMovie"],"sourceRoot":""}